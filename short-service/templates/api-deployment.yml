{{- define "env.template" }}
  - name: {{ .env }}
    valueFrom:
    secretKeyRef:
      name: {{ .name }}-secret
      key: {{ .env }}
{{- end}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api.name }}-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      components: {{ .Values.api.components }}
  template:
    metadata:
      name: {{ .Values.api.name }}
      labels:
        components: {{ .Values.api.components }}
    spec:
      containers:
        - name: {{ .Values.api.name }}
          image: "{{ .Values.api.image }}:{{ .Values.api.imageVersion }}"
          imagePullPolicy: Always
          resources:
            limits: {{ .Values.api.limits | toYaml | nindent 12 }}
          ports:
            - containerPort: {{ .Values.api.containerPort }}
          volumeMounts:
            - name: test
              mountPath: /etc/test
              readOnly: true
          env:
            {{- range .Values.api.envs }}
            {{- $data := dict "name" $.Values.api.name "env" . }}
            {{- include "env.template" $data | nindent 12 }}
            {{- end }}
